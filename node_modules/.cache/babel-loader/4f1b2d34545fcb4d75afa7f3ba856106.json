{"remainingRequest":"C:\\workspace\\live-video\\node_modules\\thread-loader\\dist\\cjs.js!C:\\workspace\\live-video\\node_modules\\babel-loader\\lib\\index.js!C:\\workspace\\live-video\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\workspace\\live-video\\src\\store\\modules\\cdn.js","dependencies":[{"path":"C:\\workspace\\live-video\\src\\store\\modules\\cdn.js","mtime":1569309432600},{"path":"C:\\workspace\\live-video\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\workspace\\\\live-video\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport api from '@/api';\nimport { errorLogger } from '@/util.js';\nvar state = {\n  cdn: 1\n}; // getters\n\nvar getters = {};\nvar actions = {\n  testCDN: function () {\n    var _testCDN = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return api.testCdn().then(function (data) {\n                if (data) {\n                  commit('testCdn', data);\n                }\n              }).catch(function (err) {\n                errorLogger(err, 'actions: testCdn');\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function testCDN(_x) {\n      return _testCDN.apply(this, arguments);\n    }\n\n    return testCDN;\n  }()\n};\nvar mutations = {\n  testCdn: function testCdn(state, payload) {\n    state.cdn = payload;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["C:\\workspace\\live-video\\src\\store\\modules\\cdn.js"],"names":["api","errorLogger","state","cdn","getters","actions","testCDN","commit","testCdn","then","data","catch","err","mutations","payload","namespaced"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,GAAG,EAAE;AADK,CAAd,C,CAIA;;AACA,IAAMC,OAAO,GAAG,EAAhB;AAIA,IAAMC,OAAO,GAAG;AACNC,EAAAA,OADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACIC,cAAAA,MADJ,QACIA,MADJ;AAAA;AAAA,qBAGFP,GAAG,CAACQ,OAAJ,GAAcC,IAAd,CAAmB,UAAAC,IAAI,EAAI;AAC7B,oBAAIA,IAAJ,EAAU;AACNH,kBAAAA,MAAM,CAAC,SAAD,EAAYG,IAAZ,CAAN;AACH;AACJ,eAJK,EAIHC,KAJG,CAIG,UAAAC,GAAG,EAAI;AACZX,gBAAAA,WAAW,CAACW,GAAD,EAAM,kBAAN,CAAX;AACH,eANK,CAHE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAhB;AAaA,IAAMC,SAAS,GAAG;AACdL,EAAAA,OADc,mBACNN,KADM,EACCY,OADD,EACU;AACpBZ,IAAAA,KAAK,CAACC,GAAN,GAAYW,OAAZ;AACH;AAHa,CAAlB;AAMA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXb,EAAAA,KAAK,EAALA,KAFW;AAGXE,EAAAA,OAAO,EAAPA,OAHW;AAIXC,EAAAA,OAAO,EAAPA,OAJW;AAKXQ,EAAAA,SAAS,EAATA;AALW,CAAf","sourcesContent":["import api from '@/api'\r\nimport { errorLogger } from '@/util.js';\r\n\r\nconst state = {\r\n    cdn: 1\r\n};\r\n\r\n// getters\r\nconst getters = {\r\n\r\n};\r\n\r\nconst actions = {\r\n    async testCDN({ commit }) {\r\n\r\n        await api.testCdn().then(data => {\r\n            if (data) {\r\n                commit('testCdn', data);\r\n            }\r\n        }).catch(err => {\r\n            errorLogger(err, 'actions: testCdn');\r\n        });\r\n    },\r\n};\r\n\r\nconst mutations = {\r\n    testCdn(state, payload) {\r\n        state.cdn = payload;\r\n    },\r\n};\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n}"]}]}