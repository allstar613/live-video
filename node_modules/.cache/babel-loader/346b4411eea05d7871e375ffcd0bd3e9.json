{"remainingRequest":"C:\\workspace\\live-video\\node_modules\\babel-loader\\lib\\index.js!C:\\workspace\\live-video\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\workspace\\live-video\\src\\store\\modules\\content.js","dependencies":[{"path":"C:\\workspace\\live-video\\src\\store\\modules\\content.js","mtime":1569479985972},{"path":"C:\\workspace\\live-video\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\workspace\\\\live-video\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport api from '@/api';\nimport { errorLogger } from '@/util.js';\nvar state = {\n  playData: {},\n  recommendVideoList: {}\n}; // getters\n\nvar getters = {};\nvar actions = {\n  getPlayContent: function () {\n    var _getPlayContent = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref, params) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return api.getPlayContent(params).then(function (data) {\n                console.log(data);\n\n                if (data) {\n                  commit('getPlayContent', data);\n                }\n              }).catch(function (err) {\n                errorLogger(err, 'actions: getPlayContent');\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getPlayContent(_x, _x2) {\n      return _getPlayContent.apply(this, arguments);\n    }\n\n    return getPlayContent;\n  }(),\n  getRecommendVideoList: function () {\n    var _getRecommendVideoList = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2, params) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return api.getRecommendVideoList(params).then(function (data) {\n                if (data) {\n                  commit('getRecommendVideoList', data);\n                }\n              }).catch(function (err) {\n                errorLogger(err, 'actions: getRecommendVideoList');\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function getRecommendVideoList(_x3, _x4) {\n      return _getRecommendVideoList.apply(this, arguments);\n    }\n\n    return getRecommendVideoList;\n  }()\n};\nvar mutations = {\n  getPlayContent: function getPlayContent(state, payload) {\n    state.playData = payload;\n  },\n  getRecommendVideoList: function getRecommendVideoList(state, payload) {\n    state.recommendVideoList = payload;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["C:\\workspace\\live-video\\src\\store\\modules\\content.js"],"names":["api","errorLogger","state","playData","recommendVideoList","getters","actions","getPlayContent","params","commit","then","data","console","log","catch","err","getRecommendVideoList","mutations","payload","namespaced"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAE,EADA;AAIVC,EAAAA,kBAAkB,EAAE;AAJV,CAAd,C,CAQA;;AACA,IAAMC,OAAO,GAAG,EAAhB;AAIA,IAAMC,OAAO,GAAG;AACNC,EAAAA,cADM;AAAA;AAAA;AAAA,mDACqBC,MADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AACWC,cAAAA,MADX,QACWA,MADX;AAAA;AAAA,qBAGFT,GAAG,CAACO,cAAJ,CAAmBC,MAAnB,EAA2BE,IAA3B,CAAgC,UAAAC,IAAI,EAAI;AAC1CC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,oBAAIA,IAAJ,EAAU;AACNF,kBAAAA,MAAM,CAAC,gBAAD,EAAmBE,IAAnB,CAAN;AACH;AACJ,eALK,EAKHG,KALG,CAKG,UAAAC,GAAG,EAAI;AACZd,gBAAAA,WAAW,CAACc,GAAD,EAAM,yBAAN,CAAX;AACH,eAPK,CAHE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAYNC,EAAAA,qBAZM;AAAA;AAAA;AAAA,qDAY4BR,MAZ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAYkBC,cAAAA,MAZlB,SAYkBA,MAZlB;AAAA;AAAA,qBAcFT,GAAG,CAACgB,qBAAJ,CAA0BR,MAA1B,EAAkCE,IAAlC,CAAuC,UAAAC,IAAI,EAAI;AACjD,oBAAIA,IAAJ,EAAU;AACNF,kBAAAA,MAAM,CAAC,uBAAD,EAA0BE,IAA1B,CAAN;AACH;AACJ,eAJK,EAIHG,KAJG,CAIG,UAAAC,GAAG,EAAI;AACZd,gBAAAA,WAAW,CAACc,GAAD,EAAM,gCAAN,CAAX;AACH,eANK,CAdE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAhB;AAwBA,IAAME,SAAS,GAAG;AACdV,EAAAA,cADc,0BACCL,KADD,EACQgB,OADR,EACiB;AAC3BhB,IAAAA,KAAK,CAACC,QAAN,GAAiBe,OAAjB;AACH,GAHa;AAIdF,EAAAA,qBAJc,iCAIQd,KAJR,EAIegB,OAJf,EAIwB;AAClChB,IAAAA,KAAK,CAACE,kBAAN,GAA2Bc,OAA3B;AACH;AANa,CAAlB;AASA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXjB,EAAAA,KAAK,EAALA,KAFW;AAGXG,EAAAA,OAAO,EAAPA,OAHW;AAIXC,EAAAA,OAAO,EAAPA,OAJW;AAKXW,EAAAA,SAAS,EAATA;AALW,CAAf","sourcesContent":["import api from '@/api'\r\nimport { errorLogger } from '@/util.js';\r\n\r\nconst state = {\r\n    playData: {\r\n\r\n    },\r\n    recommendVideoList: {\r\n\r\n    }\r\n};\r\n// getters\r\nconst getters = {\r\n\r\n};\r\n\r\nconst actions = {\r\n    async getPlayContent({ commit }, params) {\r\n        //    console.log(params)\r\n        await api.getPlayContent(params).then(data => {\r\n            console.log(data);\r\n            if (data) {\r\n                commit('getPlayContent', data);\r\n            }\r\n        }).catch(err => {\r\n            errorLogger(err, 'actions: getPlayContent');\r\n        });\r\n    },\r\n    async getRecommendVideoList({ commit }, params) {\r\n\r\n        await api.getRecommendVideoList(params).then(data => {\r\n            if (data) {\r\n                commit('getRecommendVideoList', data);\r\n            }\r\n        }).catch(err => {\r\n            errorLogger(err, 'actions: getRecommendVideoList');\r\n        });\r\n    },\r\n};\r\n\r\nconst mutations = {\r\n    getPlayContent(state, payload) {\r\n        state.playData = payload;\r\n    },\r\n    getRecommendVideoList(state, payload) {\r\n        state.recommendVideoList = payload;\r\n    },\r\n};\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n}"]}]}