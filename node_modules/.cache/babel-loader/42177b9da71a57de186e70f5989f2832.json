{"remainingRequest":"C:\\workspace\\live-video\\node_modules\\babel-loader\\lib\\index.js!C:\\workspace\\live-video\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\workspace\\live-video\\src\\util.js","dependencies":[{"path":"C:\\workspace\\live-video\\src\\util.js","mtime":1569563683422},{"path":"C:\\workspace\\live-video\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nexport var createCookie = function createCookie(name, value, days) {\n  var expires = \"\";\n\n  if (days) {\n    var date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    expires = \"; expires=\" + date.toGMTString();\n  } else {\n    expires = \"\";\n  }\n\n  document.cookie = name + \"=\" + value + expires + \"; path=/\";\n};\nexport var readCookie = function readCookie(name) {\n  var value = \"; \" + document.cookie;\n  var parts = value.split(\"; \" + name + \"=\");\n\n  if (parts.length === 2) {\n    return parts.pop().split(\";\").shift();\n  }\n};\nexport var deleteCookie = function deleteCookie(name) {\n  document.cookie = name + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n};\nexport var errorLogger = function errorLogger(err, location) {\n  console.log('Error:', err);\n  console.log('Error occured at:', location);\n};\nexport var localStorageUtil = {\n  create: function create(key, value) {\n    window.localStorage.setItem(key, value);\n  },\n  read: function read(key, value) {\n    return window.localStorage.getItem(key);\n  },\n  delete: function _delete(key) {\n    window.localStorage.removeItem(key);\n  }\n};\nexport var cookieUtil = {\n  create: createCookie,\n  read: readCookie,\n  delete: deleteCookie\n};",{"version":3,"sources":["C:\\workspace\\live-video\\src\\util.js"],"names":["createCookie","name","value","days","expires","date","Date","setTime","getTime","toGMTString","document","cookie","readCookie","parts","split","length","pop","shift","deleteCookie","errorLogger","err","location","console","log","localStorageUtil","create","key","window","localStorage","setItem","read","getItem","delete","removeItem","cookieUtil"],"mappings":";AAAA,OAAO,IAAOA,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,KAAP,EAAcC,IAAd,EAAuB;AAClD,MAAIC,OAAO,GAAE,EAAb;;AACA,MAAID,IAAJ,EAAU;AACN,QAAIE,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAkBL,IAAI,GAAG,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,IAArD;AACAC,IAAAA,OAAO,GAAG,eAAeC,IAAI,CAACI,WAAL,EAAzB;AACH,GAJD,MAKK;AACDL,IAAAA,OAAO,GAAG,EAAV;AACH;;AACDM,EAAAA,QAAQ,CAACC,MAAT,GAAkBV,IAAI,GAAG,GAAP,GAAaC,KAAb,GAAqBE,OAArB,GAA+B,UAAjD;AACD,CAXM;AAaP,OAAO,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAAAX,IAAI,EAAI;AAChC,MAAIC,KAAK,GAAG,OAAOQ,QAAQ,CAACC,MAA5B;AACA,MAAIE,KAAK,GAAGX,KAAK,CAACY,KAAN,CAAY,OAAOb,IAAP,GAAc,GAA1B,CAAZ;;AACA,MAAIY,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAOF,KAAK,CAACG,GAAN,GAAYF,KAAZ,CAAkB,GAAlB,EAAuBG,KAAvB,EAAP;AACD;AACF,CANM;AAQP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAjB,IAAI,EAAI;AAClCS,EAAAA,QAAQ,CAACC,MAAT,GAAkBV,IAAI,GAAG,2CAAzB;AACD,CAFM;AAIP,OAAO,IAAMkB,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,QAAN,EAAoB;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,GAAtB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,QAAjC;AACD,CAHM;AAKP,OAAO,IAAMG,gBAAgB,GAAG;AAC9BC,EAAAA,MAD8B,kBACtBC,GADsB,EACjBxB,KADiB,EACV;AAClByB,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BH,GAA5B,EAAiCxB,KAAjC;AACD,GAH6B;AAI9B4B,EAAAA,IAJ8B,gBAIxBJ,GAJwB,EAInBxB,KAJmB,EAIZ;AAChB,WAAOyB,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4BL,GAA5B,CAAP;AACD,GAN6B;AAO9BM,EAAAA,MAP8B,mBAOvBN,GAPuB,EAOnB;AACTC,IAAAA,MAAM,CAACC,YAAP,CAAoBK,UAApB,CAA+BP,GAA/B;AACD;AAT6B,CAAzB;AAYP,OAAO,IAAMQ,UAAU,GAAG;AACxBT,EAAAA,MAAM,EAAEzB,YADgB;AAExB8B,EAAAA,IAAI,EAAElB,UAFkB;AAGxBoB,EAAAA,MAAM,EAAEd;AAHgB,CAAnB","sourcesContent":["export const  createCookie = (name, value, days) => {\n  let expires =\"\";\n  if (days) {\n      let date = new Date();\n      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n      expires = \"; expires=\" + date.toGMTString();\n  }\n  else {\n      expires = \"\";\n  }\n  document.cookie = name + \"=\" + value + expires + \"; path=/\";\n}\n\nexport const readCookie = name => {\n  let value = \"; \" + document.cookie;\n  let parts = value.split(\"; \" + name + \"=\");\n  if (parts.length === 2) { \n    return parts.pop().split(\";\").shift(); \n  }\n}\n\nexport const deleteCookie = name => {\n  document.cookie = name + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n}\n\nexport const errorLogger = (err, location ) => {\n  console.log('Error:', err)\n  console.log('Error occured at:', location)\n}\n\nexport const localStorageUtil = {\n  create (key, value) {\n    window.localStorage.setItem(key, value)\n  },\n  read (key, value) {\n    return window.localStorage.getItem(key)\n  },\n  delete(key){\n    window.localStorage.removeItem(key)\n  }\n}\n\nexport const cookieUtil = {\n  create: createCookie,\n  read: readCookie,\n  delete: deleteCookie,\n}"]}]}