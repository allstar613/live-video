{"remainingRequest":"C:\\workspace\\live-video\\node_modules\\babel-loader\\lib\\index.js!C:\\workspace\\live-video\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\workspace\\live-video\\src\\store\\modules\\main.js","dependencies":[{"path":"C:\\workspace\\live-video\\src\\store\\modules\\main.js","mtime":1569578125724},{"path":"C:\\workspace\\live-video\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\workspace\\\\live-video\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport api from '@/api';\nimport { errorLogger } from '@/util.js';\nvar state = {\n  infoList: {},\n  videoList: {}\n}; // getters\n\nvar getters = {};\nvar actions = {\n  getInfo: function () {\n    var _getInfo = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref, params) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return api.getInfo(params).then(function (data) {\n                console.log(data);\n\n                if (data) {\n                  commit(\"getInfo\", data);\n                }\n              }).catch(function (err) {\n                errorLogger(err, \"actions: getInfo\");\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getInfo(_x, _x2) {\n      return _getInfo.apply(this, arguments);\n    }\n\n    return getInfo;\n  }(),\n  getVideoList: function () {\n    var _getVideoList = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2, params) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return api.getVideoList(params).then(function (data) {\n                if (data) {\n                  commit('getVideoList', data);\n                }\n              }).catch(function (err) {\n                errorLogger(err, 'actions: getVideoList');\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function getVideoList(_x3, _x4) {\n      return _getVideoList.apply(this, arguments);\n    }\n\n    return getVideoList;\n  }()\n};\nvar mutations = {\n  getInfo: function getInfo(state, payload) {\n    state.infoList = payload;\n  },\n  getVideoList: function getVideoList(state, payload) {\n    state.videoList = payload;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["C:\\workspace\\live-video\\src\\store\\modules\\main.js"],"names":["api","errorLogger","state","infoList","videoList","getters","actions","getInfo","params","commit","then","data","console","log","catch","err","getVideoList","mutations","payload","namespaced"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAE,EADA;AAGVC,EAAAA,SAAS,EAAE;AAHD,CAAd,C,CAQA;;AACA,IAAMC,OAAO,GAAG,EAAhB;AAIA,IAAMC,OAAO,GAAG;AACNC,EAAAA,OADM;AAAA;AAAA;AAAA,mDACcC,MADd;AAAA;AAAA;AAAA;AAAA;AAAA;AACIC,cAAAA,MADJ,QACIA,MADJ;AAAA;AAAA,qBAGFT,GAAG,CACNO,OADG,CACKC,MADL,EAEHE,IAFG,CAEE,UAAAC,IAAI,EAAI;AACZC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,oBAAIA,IAAJ,EAAU;AACRF,kBAAAA,MAAM,CAAC,SAAD,EAAYE,IAAZ,CAAN;AACD;AACF,eAPG,EAQHG,KARG,CAQG,UAAAC,GAAG,EAAI;AACZd,gBAAAA,WAAW,CAACc,GAAD,EAAM,kBAAN,CAAX;AACD,eAVG,CAHE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAeNC,EAAAA,YAfM;AAAA;AAAA;AAAA,qDAemBR,MAfnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAeSC,cAAAA,MAfT,SAeSA,MAfT;AAAA;AAAA,qBAiBFT,GAAG,CAACgB,YAAJ,CAAiBR,MAAjB,EAAyBE,IAAzB,CAA8B,UAAAC,IAAI,EAAI;AAExC,oBAAIA,IAAJ,EAAU;AACNF,kBAAAA,MAAM,CAAC,cAAD,EAAiBE,IAAjB,CAAN;AACH;AACJ,eALK,EAKHG,KALG,CAKG,UAAAC,GAAG,EAAI;AACZd,gBAAAA,WAAW,CAACc,GAAD,EAAM,uBAAN,CAAX;AACH,eAPK,CAjBE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAhB;AA4BA,IAAME,SAAS,GAAG;AACdV,EAAAA,OADc,mBACNL,KADM,EACCgB,OADD,EACU;AACpBhB,IAAAA,KAAK,CAACC,QAAN,GAAiBe,OAAjB;AACH,GAHa;AAIdF,EAAAA,YAJc,wBAIDd,KAJC,EAIMgB,OAJN,EAIe;AACzBhB,IAAAA,KAAK,CAACE,SAAN,GAAkBc,OAAlB;AACH;AANa,CAAlB;AASA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXjB,EAAAA,KAAK,EAALA,KAFW;AAGXG,EAAAA,OAAO,EAAPA,OAHW;AAIXC,EAAAA,OAAO,EAAPA,OAJW;AAKXW,EAAAA,SAAS,EAATA;AALW,CAAf","sourcesContent":["import api from '@/api'\r\nimport { errorLogger } from '@/util.js';\r\n\r\nconst state = {\r\n    infoList: {\r\n    },\r\n    videoList: {\r\n    }\r\n\r\n};\r\n\r\n// getters\r\nconst getters = {\r\n\r\n};\r\n\r\nconst actions = {\r\n    async getInfo({ commit }, params) {\r\n\r\n        await api\r\n          .getInfo(params)\r\n          .then(data => {\r\n            console.log(data);\r\n            if (data) {\r\n              commit(\"getInfo\", data);\r\n            }\r\n          })\r\n          .catch(err => {\r\n            errorLogger(err, \"actions: getInfo\");\r\n          });\r\n    },\r\n    async getVideoList({ commit }, params) {\r\n\r\n        await api.getVideoList(params).then(data => {\r\n\r\n            if (data) {\r\n                commit('getVideoList', data);\r\n            }\r\n        }).catch(err => {\r\n            errorLogger(err, 'actions: getVideoList');\r\n        });\r\n    },\r\n};\r\n\r\nconst mutations = {\r\n    getInfo(state, payload) {\r\n        state.infoList = payload;\r\n    },\r\n    getVideoList(state, payload) {\r\n        state.videoList = payload;\r\n    },\r\n};\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n}"]}]}