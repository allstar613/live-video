{"remainingRequest":"C:\\workspace\\live-video\\node_modules\\babel-loader\\lib\\index.js!C:\\workspace\\live-video\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\workspace\\live-video\\src\\api\\api.base.js","dependencies":[{"path":"C:\\workspace\\live-video\\src\\api\\api.base.js","mtime":1569469377858},{"path":"C:\\workspace\\live-video\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\workspace\\\\live-video\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { apiBaseUrl } from '@/config.js';\n/*\nexport const setToken =  axios => {\n  const token = localStorageUtil.read('_token') || null;\n  if (token) {\n    axios.defaults.headers.common['token'] = `${token}`;\n  } else {\n    axios.defaults.headers.common['token'] = ``;\n  }\n}\n*/\n\nexport var apiRoutesConfig = {\n  main: {\n    info: {\n      url: 'info',\n      method: 'POST',\n      alertError: true\n    },\n    videoList: {\n      url: 'videoList',\n      method: 'POST',\n      alertError: true\n    }\n  },\n  content: {\n    playContent: {\n      url: 'play',\n      method: 'POST',\n      alertError: true\n    },\n    recommendVideoList: {\n      url: 'recommendVideoList',\n      method: 'POST',\n      alertError: true\n    }\n  },\n  pay: {\n    pay: {\n      url: 'pay',\n      method: 'POST',\n      alertError: true\n    },\n    payCheck: {\n      url: 'payCheck',\n      method: 'POST',\n      alertError: true\n    }\n  }\n};\n\nvar responseHandler = function responseHandler(response) {\n  var alertError = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var alertSuccess = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  // console.log(response);\n  return response.data;\n  /*\n  if (response.data.status === 1) {\n    return response.data\n  }\n  else {\n     throw { msg: 'Error in api..' }\n  }\n  */\n};\n\nvar apiWrapper =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(config, params) {\n    var headers,\n        key,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            headers = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n            axios.defaults.headers.common['Content-Type'] = 'application/json'; //  setToken(axios);\n\n            for (key in headers) {\n              axios.defaults.headers.common[key] = headers[key];\n            }\n\n            return _context.abrupt(\"return\", axios[config.method.toLowerCase()](\"\".concat(apiBaseUrl, \"/\").concat(config.url), params, headers).then(function (response) {\n              return responseHandler(response, config.alertError, config.alertSuccess);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function apiWrapper(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default apiWrapper;",{"version":3,"sources":["C:\\workspace\\live-video\\src\\api\\api.base.js"],"names":["axios","apiBaseUrl","apiRoutesConfig","main","info","url","method","alertError","videoList","content","playContent","recommendVideoList","pay","payCheck","responseHandler","response","alertSuccess","data","apiWrapper","config","params","headers","defaults","common","key","toLowerCase","then"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA0B,aAA1B;AAEA;;;;;;;;;;;AAUA,OAAO,IAAMC,eAAe,GAAG;AAC7BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE;AACJC,MAAAA,GAAG,EAAE,MADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,UAAU,EAAE;AAHR,KADF;AAMJC,IAAAA,SAAS,EAAE;AACTH,MAAAA,GAAG,EAAE,WADI;AAETC,MAAAA,MAAM,EAAE,MAFC;AAGTC,MAAAA,UAAU,EAAE;AAHH;AANP,GADuB;AAa7BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,EAAE;AACXL,MAAAA,GAAG,EAAE,MADM;AAEXC,MAAAA,MAAM,EAAE,MAFG;AAGXC,MAAAA,UAAU,EAAE;AAHD,KADN;AAMPI,IAAAA,kBAAkB,EAAE;AAClBN,MAAAA,GAAG,EAAE,oBADa;AAElBC,MAAAA,MAAM,EAAE,MAFU;AAGlBC,MAAAA,UAAU,EAAE;AAHM;AANb,GAboB;AAyB7BK,EAAAA,GAAG,EAAE;AACHA,IAAAA,GAAG,EAAE;AACHP,MAAAA,GAAG,EAAE,KADF;AAEHC,MAAAA,MAAM,EAAE,MAFL;AAGHC,MAAAA,UAAU,EAAE;AAHT,KADF;AAMHM,IAAAA,QAAQ,EAAE;AACRR,MAAAA,GAAG,EAAE,UADG;AAERC,MAAAA,MAAM,EAAE,MAFA;AAGRC,MAAAA,UAAU,EAAE;AAHJ;AANP;AAzBwB,CAAxB;;AAyCP,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAwD;AAAA,MAA7CR,UAA6C,uEAAhC,KAAgC;AAAA,MAAzBS,YAAyB,uEAAV,KAAU;AAC9E;AACA,SAAOD,QAAQ,CAACE,IAAhB;AACA;;;;;;;;AASD,CAZD;;AAgBA,IAAMC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,MAAP,EAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,YAAAA,OAAvB,2DAAiC,EAAjC;AAEjBrB,YAAAA,KAAK,CAACsB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,CAA8B,cAA9B,IAAgD,kBAAhD,CAFiB,CAGjB;;AACA,iBAASC,GAAT,IAAgBH,OAAhB,EAAyB;AACvBrB,cAAAA,KAAK,CAACsB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,CAA8BC,GAA9B,IAAqCH,OAAO,CAACG,GAAD,CAA5C;AACD;;AANgB,6CAOVxB,KAAK,CAACmB,MAAM,CAACb,MAAP,CAAcmB,WAAd,EAAD,CAAL,WAAsCxB,UAAtC,cAAoDkB,MAAM,CAACd,GAA3D,GAAkEe,MAAlE,EAA0EC,OAA1E,EAAmFK,IAAnF,CAAwF,UAAAX,QAAQ,EAAI;AACzG,qBAAOD,eAAe,CAACC,QAAD,EAAWI,MAAM,CAACZ,UAAlB,EAA8BY,MAAM,CAACH,YAArC,CAAtB;AACD,aAFM,CAPU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVE,UAAU;AAAA;AAAA;AAAA,GAAhB;;AAYA,eAAeA,UAAf","sourcesContent":["import axios from 'axios';\nimport { apiBaseUrl} from '@/config.js'\n\n/*\nexport const setToken =  axios => {\n  const token = localStorageUtil.read('_token') || null;\n  if (token) {\n    axios.defaults.headers.common['token'] = `${token}`;\n  } else {\n    axios.defaults.headers.common['token'] = ``;\n  }\n}\n*/\nexport const apiRoutesConfig = {\n  main: {\n    info: {\n      url: 'info',\n      method: 'POST',\n      alertError: true,\n    },\n    videoList: {\n      url: 'videoList',\n      method: 'POST',\n      alertError: true,\n    },\n  },\n  content: {\n    playContent: {\n      url: 'play',\n      method: 'POST',\n      alertError: true,\n    },\n    recommendVideoList: {\n      url: 'recommendVideoList',\n      method: 'POST',\n      alertError: true,\n    },\n  },\n  pay: {\n    pay: {\n      url: 'pay',\n      method: 'POST',\n      alertError: true,\n    },\n    payCheck: {\n      url: 'payCheck',\n      method: 'POST',\n      alertError: true,\n    },\n  },\n\n}\n\n\nconst responseHandler = (response, alertError = false, alertSuccess = false) => {\n  // console.log(response);\n  return response.data\n  /*\n  if (response.data.status === 1) {\n    return response.data\n  }\n  else {\n\n    throw { msg: 'Error in api..' }\n  }\n*/\n}\n\n\n\nconst apiWrapper = async (config, params, headers = {}) => {\n\n  axios.defaults.headers.common['Content-Type'] = 'application/json';\n  //  setToken(axios);\n  for (var key in headers) {\n    axios.defaults.headers.common[key] = headers[key];\n  }\n  return axios[config.method.toLowerCase()](`${apiBaseUrl}/${config.url}`, params, headers).then(response => {\n    return responseHandler(response, config.alertError, config.alertSuccess)\n  })\n}\n\nexport default apiWrapper;\n"]}]}