{"remainingRequest":"C:\\workspace\\live-video\\node_modules\\thread-loader\\dist\\cjs.js!C:\\workspace\\live-video\\node_modules\\babel-loader\\lib\\index.js!C:\\workspace\\live-video\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\workspace\\live-video\\src\\api\\cdn.base.js","dependencies":[{"path":"C:\\workspace\\live-video\\src\\api\\cdn.base.js","mtime":1569563683462},{"path":"C:\\workspace\\live-video\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\workspace\\\\live-video\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { cdnBaseUrl } from '@/config.js';\nexport var cdnRoutesConfig = {\n  main: {\n    testCdn: {\n      url: 'testCdn',\n      method: 'POST',\n      alertError: true\n    }\n  }\n};\n\nvar responseHandler = function responseHandler(response) {\n  var alertError = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var alertSuccess = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  // console.log(response);\n  if (response.status === 200) {\n    return 1;\n  } else {\n    return 0;\n  }\n};\n\nvar cndWrapper =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(config, params) {\n    var headers,\n        key,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            headers = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n            axios.defaults.headers.common['Content-Type'] = 'application/json';\n\n            for (key in headers) {\n              axios.defaults.headers.common[key] = headers[key];\n            }\n\n            return _context.abrupt(\"return\", axios[config.method.toLowerCase()](\"\".concat(cdnBaseUrl, \"/\").concat(config.url), params, headers).then(function (response) {\n              return responseHandler(response, config.alertError, config.alertSuccess);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function cndWrapper(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default cndWrapper;",null]}