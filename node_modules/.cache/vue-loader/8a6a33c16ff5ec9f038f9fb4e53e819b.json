{"remainingRequest":"C:\\workspace\\live-video\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\workspace\\live-video\\src\\components\\PayCode.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\workspace\\live-video\\src\\components\\PayCode.vue","mtime":1569577605836},{"path":"C:\\workspace\\live-video\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapActions } from \"vuex\";\nimport iconQR from \"@/assets/images/icn_qrcode.png\";\nimport iconCheck from \"@/assets/images/icn_check.png\";\nimport iconPad from \"@/assets/images/icn_pad.png\";\nimport api from \"@/api\";\nimport { readCookie, createCookie, deleteCookie,localStorageUtil } from \"@/util.js\";\n\nexport default {\n  data() {\n    return {\n      iconQR,\n      iconCheck,\n      iconPad,\n      second: 120,\n      timer_second: null,\n      timer_checkPay: null\n    };\n  },\n  methods: {\n    ...mapActions({\n      checkPayCheck: \"pay/checkPayCheck\"\n    }),\n    reciprocal() {\n      if (this.timer_second) {\n        clearInterval(this.timer_second);\n      } else {\n        this.timer_second = setInterval(() => {\n          if (this.second == 0) {\n            this.$router.go(-1);\n          }\n          this.second--;\n        }, 1000);\n      }\n    },\n    check() {\n      if (this.timer_checkPay) {\n        clearInterval(this.timer_checkPay);\n      } else {\n        this.timer_checkPay = setInterval(() => {\n          this.checkPayApi();\n        }, 3000);\n      }\n    },\n    checkPayApi() {\n      const params = {\n        orderid: this.payList.data.orderid\n      };\n\n      api.checkPayCheck(params).then(res => {\n        if (res.status == 1) {\n\n          localStorageUtil.create(\"playvideo\", res.data.video);\n          createCookie(\"playvideo\", res.data.video);\n\n          this.$router.push(\"/playvideo\");\n        }\n      });\n    }\n  },\n  computed: {\n    ...mapState({\n      payList: state => state.pay.payList\n    }),\n    payData() {\n      return this.payList.data;\n    }\n  },\n  mounted() {\n    if (!this.payData.money) {\n      this.$router.go(-1);\n    }\n\n    const params = {\n      orderid: this.payList.data.orderid\n    };\n\n    this.checkPayCheck(params);\n\n    this.reciprocal();\n    this.check();\n  },\n  destroyed() {\n    window.removeEventListener(\"scroll\", this.scrollToTop);\n    clearInterval(this.timer_second);\n    clearInterval(this.timer_checkPay);\n  }\n};\n",null]}