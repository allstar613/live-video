{"remainingRequest":"C:\\workspace\\live-video\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\workspace\\live-video\\src\\components\\Entry.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\workspace\\live-video\\src\\components\\Entry.vue","mtime":1569561707094},{"path":"C:\\workspace\\live-video\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\live-video\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Dialog from \"@/components/common/Dialog.vue\";\nimport qrImage from \"@/assets/images/QR.svg\";\nimport qr from \"@/assets/images/icon.png\";\n\nimport Clipboard from \"clipboard\";\nimport { mapState, mapActions } from \"vuex\";\nimport VueQr from \"vue-qr\";\n\nexport default {\n  props: {\n    isVisible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  components: {\n    Dialog,\n    VueQr\n  },\n  data() {\n    return {\n      qrImage,\n      qr\n    };\n  },\n  methods: {\n    hideEntry() {\n      this.$emit(\"hide-entry\");\n    },\n    copy() {\n      var clipboard = new Clipboard(\".tag-read\");\n      clipboard.on(\"success\", e => {\n        alert(\"复制成功\");\n\n        // 释放内存\n        clipboard.destroy();\n      });\n      clipboard.on(\"error\", e => {\n        // 不支持复制\n        alert(\"该浏览器不支持自动复制\");\n        // 释放内存\n        clipboard.destroy();\n      });\n    }\n  },\n  computed: {\n    ...mapState({\n      infoList: state => state.main.infoList\n    })\n  }\n};\n",{"version":3,"sources":["Entry.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Entry.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <Dialog v-show=\"isVisible\">\n    <template v-slot:content>\n      <h3 class=\"dialog-title\">在线影院 私密入口</h3>\n      <img v-show=\"!infoList.data.url\" class=\"w100 h100 mb-p5\" :src=\"qrImage\" alt />\n      <vue-qr\n        class=\"mb-p5\"\n        v-show=\"infoList.data.url\"\n        :text=\"infoList.data.url\"\n        backgroundColor=\"#fff\"\n        :size=\"100\"\n        :margin=\"7\"\n        dotScale=\"1\"\n      ></vue-qr>\n      <p class=\"dialog-subtitle\">\n        此二維碼是影院入口\n        <br />請長案二為碼，保存到相冊\n      </p>\n      <div class=\"divider-content\">\n        <p\n          class=\"text-grey mb10 tag-read\"\n          :data-clipboard-text=\"infoList.data.url\"\n          @click=\"copy\"\n        >{{infoList.data.url}}</p>\n        <a class=\"text-blue tag-read\" :data-clipboard-text=\"infoList.data.url\" @click=\"copy\">复制连结</a>\n      </div>\n    </template>\n    <template v-slot:buttons>\n      <a class=\"_blue\" @click=\"hideEntry\">关闭</a>\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"@/components/common/Dialog.vue\";\nimport qrImage from \"@/assets/images/QR.svg\";\nimport qr from \"@/assets/images/icon.png\";\n\nimport Clipboard from \"clipboard\";\nimport { mapState, mapActions } from \"vuex\";\nimport VueQr from \"vue-qr\";\n\nexport default {\n  props: {\n    isVisible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  components: {\n    Dialog,\n    VueQr\n  },\n  data() {\n    return {\n      qrImage,\n      qr\n    };\n  },\n  methods: {\n    hideEntry() {\n      this.$emit(\"hide-entry\");\n    },\n    copy() {\n      var clipboard = new Clipboard(\".tag-read\");\n      clipboard.on(\"success\", e => {\n        alert(\"复制成功\");\n\n        // 释放内存\n        clipboard.destroy();\n      });\n      clipboard.on(\"error\", e => {\n        // 不支持复制\n        alert(\"该浏览器不支持自动复制\");\n        // 释放内存\n        clipboard.destroy();\n      });\n    }\n  },\n  computed: {\n    ...mapState({\n      infoList: state => state.main.infoList\n    })\n  }\n};\n</script>\n\n<style>\n</style>\n"]}]}